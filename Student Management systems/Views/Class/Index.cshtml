@model IEnumerable<Student_Management_systems.Models.ClassModels>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Class</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home")">Home</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>Classes</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>

@using (Html.BeginForm("Index", "Class", FormMethod.Get))
{
    <div class="wrapper wrapper-content animated fadeInRight">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox ">
                    <div class="ibox-title">
                        <h2>Class</h2>
                        <br />
                        @if (User.Identity.IsAuthenticated && User.IsInRole("Administrator"))
                        {
                            <p>
                                @Html.ActionLink("Create New", "Create")
                            </p>
                        }
                        <table class="table">
                            <tr>
                                <th>
                                    Class
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Descriptions)
                                </th>
                                <th>
                                    Trainer Name
                                </th>
                                <th></th>
                            </tr>

                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Course_Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Descriptions)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TrainerModels.TrainerFullName)
                                    </td>
                                    @if (User.Identity.IsAuthenticated && User.IsInRole("Trainer"))
                                    {
                                        <td>
                                            @Html.ActionLink("Details", "Details", new { id = item.ClassId })
                                        </td>
                                    }
                                    @if (User.Identity.IsAuthenticated && User.IsInRole("Administrator"))
                                    {
                                        <td>
                                            @Html.ActionLink("Edit", "Edit", new { id = item.ClassId }) |
                                            @Html.ActionLink("Details", "Details", new { id = item.ClassId }) |
                                            @Html.ActionLink("Delete", "Delete", new { id = item.ClassId })
                                        </td>
                                    }
                                </tr>
                            }
                        </table>

                    </div>
                </div>
            </div>
        </div>
    </div>
}